Renderer.1 {
    borderbetweenarrows = 0;
    texturearrowdown = "assets/gui/themes/Black.png" Part(163, 174, 20, 20) Middle(0, 1, 20, 19);
    texturearrowdownhover = "assets/gui/themes/Black.png" Part(183, 174, 20, 20) Middle(0, 1, 20, 19);
    texturearrowup = "assets/gui/themes/Black.png" Part(163, 154, 20, 20) Middle(0, 0, 20, 19);
    texturearrowuphover = "assets/gui/themes/Black.png" Part(183, 154, 20, 20) Middle(0, 0, 20, 19);
}

Renderer.2 {
    backgroundcolor = transparent;
    bordercolor = #BEBEBE;
    borders = (0, 1, 0, 0);
    textcolor = #3C3C3C;
    texturebackground = None;
}

Renderer.3 {
    textcolor = rgb(190, 190, 190);
    textcolorhover = rgb(250, 250, 250);
    texturechecked = "assets/gui/themes/Black.png" Part(124, 0, 32, 32);
    texturecheckeddisabled = None;
    texturecheckedfocused = "assets/gui/themes/Black.png" Part(252, 0, 32, 32);
    texturecheckedhover = "assets/gui/themes/Black.png" Part(188, 0, 32, 32);
    textureunchecked = "assets/gui/themes/Black.png" Part(92, 0, 32, 32);
    textureuncheckeddisabled = None;
    textureuncheckedfocused = "assets/gui/themes/Black.png" Part(220, 0, 32, 32);
    textureuncheckedhover = "assets/gui/themes/Black.png" Part(156, 0, 32, 32);
}

Renderer.4 {
    textcolor = rgb(190, 190, 190);
    textcolorhover = rgb(250, 250, 250);
    texturechecked = "assets/gui/themes/Black.png" Part(124, 0, 32, 32);
    texturecheckeddisabled = None;
    texturecheckedfocused = "assets/gui/themes/Black.png" Part(252, 0, 32, 32);
    texturecheckedhover = "assets/gui/themes/Black.png" Part(188, 0, 32, 32);
    textureunchecked = "assets/gui/themes/Black.png" Part(92, 0, 32, 32);
    textureuncheckeddisabled = None;
    textureuncheckedfocused = "assets/gui/themes/Black.png" Part(220, 0, 32, 32);
    textureuncheckedhover = "assets/gui/themes/Black.png" Part(156, 0, 32, 32);
}

Renderer.5 {
    textcolor = rgb(190, 190, 190);
    textcolorhover = rgb(250, 250, 250);
    texture = "assets/gui/themes/Black.png" Part( 0, 64, 45, 50) Middle(10, 0, 25, 50);
    texturedisabled = None;
    texturedown = "assets/gui/themes/Black.png" Part(90, 64, 45, 50) Middle(10, 0, 25, 50);
    texturefocused = "assets/gui/themes/Black.png" Part(135, 64, 45, 50) Middle(10, 0, 25, 50);
    texturehover = "assets/gui/themes/Black.png" Part(45, 64, 45, 50) Middle(10, 0, 25, 50);
}

Renderer.6 {
    textcolor = rgb(190, 190, 190);
    texturebackground = None;

    scrollbar {
        texturearrowdown = "assets/gui/themes/Black.png" Part(163, 174, 20, 20) Middle(0, 1, 20, 19);
        texturearrowdownhover = "assets/gui/themes/Black.png" Part(183, 174, 20, 20) Middle(0, 1, 20, 19);
        texturearrowup = "assets/gui/themes/Black.png" Part(163, 154, 20, 20) Middle(0, 0, 20, 19);
        texturearrowuphover = "assets/gui/themes/Black.png" Part(183, 154, 20, 20) Middle(0, 0, 20, 19);
        texturethumb = "assets/gui/themes/Black.png" Part(143, 154, 20, 20);
        texturethumbhover = "assets/gui/themes/Black.png" Part(143, 174, 20, 20);
        texturetrack = "assets/gui/themes/Black.png" Part(123, 154, 20, 20);
        texturetrackhover = "assets/gui/themes/Black.png" Part(123, 174, 20, 20);
    }
}

Renderer.7 {
    textcolor = rgb(190, 190, 190);
    textcolorhover = rgb(250, 250, 250);
    texturechecked = "assets/gui/themes/Black.png" Part(124, 0, 32, 32);
    texturecheckeddisabled = None;
    texturecheckedfocused = "assets/gui/themes/Black.png" Part(252, 0, 32, 32);
    texturecheckedhover = "assets/gui/themes/Black.png" Part(188, 0, 32, 32);
    textureunchecked = "assets/gui/themes/Black.png" Part(92, 0, 32, 32);
    textureuncheckeddisabled = None;
    textureuncheckedfocused = "assets/gui/themes/Black.png" Part(220, 0, 32, 32);
    textureuncheckedhover = "assets/gui/themes/Black.png" Part(156, 0, 32, 32);
}

Renderer.8 {
    caretcolor = rgb(110, 110, 255);
    defaulttextcolor = rgb(120, 120, 120);
    padding = (6, 4, 6, 4);
    selectedtextbackgroundcolor = rgb( 10, 110, 255);
    selectedtextcolor = White;
    textcolor = rgb(190, 190, 190);
    texture = "assets/gui/themes/Black.png" Part(0, 114, 60, 40) Middle(15, 0, 30, 40);
    texturedisabled = None;
    texturefocused = "assets/gui/themes/Black.png" Part(120, 114, 60, 40) Middle(15, 0, 30, 40);
    texturehover = "assets/gui/themes/Black.png" Part(60, 114, 60, 40) Middle(15, 0, 30, 40);
}

Renderer.9 {
    caretcolor = rgb(110, 110, 255);
    defaulttextcolor = rgb(120, 120, 120);
    padding = (6, 4, 6, 4);
    selectedtextbackgroundcolor = rgb( 10, 110, 255);
    selectedtextcolor = White;
    textcolor = rgb(190, 190, 190);
    texture = "assets/gui/themes/Black.png" Part(0, 114, 60, 40) Middle(15, 0, 30, 40);
    texturedisabled = None;
    texturefocused = "assets/gui/themes/Black.png" Part(120, 114, 60, 40) Middle(15, 0, 30, 40);
    texturehover = "assets/gui/themes/Black.png" Part(60, 114, 60, 40) Middle(15, 0, 30, 40);
}

Renderer.10 {
    textcolor = rgb(190, 190, 190);
    texturebackground = None;

    scrollbar {
        texturearrowdown = "assets/gui/themes/Black.png" Part(163, 174, 20, 20) Middle(0, 1, 20, 19);
        texturearrowdownhover = "assets/gui/themes/Black.png" Part(183, 174, 20, 20) Middle(0, 1, 20, 19);
        texturearrowup = "assets/gui/themes/Black.png" Part(163, 154, 20, 20) Middle(0, 0, 20, 19);
        texturearrowuphover = "assets/gui/themes/Black.png" Part(183, 154, 20, 20) Middle(0, 0, 20, 19);
        texturethumb = "assets/gui/themes/Black.png" Part(143, 154, 20, 20);
        texturethumbhover = "assets/gui/themes/Black.png" Part(143, 174, 20, 20);
        texturetrack = "assets/gui/themes/Black.png" Part(123, 154, 20, 20);
        texturetrackhover = "assets/gui/themes/Black.png" Part(123, 174, 20, 20);
    }
}

Renderer.11 {
    textcolor = rgb(190, 190, 190);
    textcolorhover = rgb(250, 250, 250);
    texturechecked = "assets/gui/themes/Black.png" Part(124, 0, 32, 32);
    texturecheckeddisabled = None;
    texturecheckedfocused = "assets/gui/themes/Black.png" Part(252, 0, 32, 32);
    texturecheckedhover = "assets/gui/themes/Black.png" Part(188, 0, 32, 32);
    textureunchecked = "assets/gui/themes/Black.png" Part(92, 0, 32, 32);
    textureuncheckeddisabled = None;
    textureuncheckedfocused = "assets/gui/themes/Black.png" Part(220, 0, 32, 32);
    textureuncheckedhover = "assets/gui/themes/Black.png" Part(156, 0, 32, 32);
}

Renderer.12 {
    backgroundcolor = rgb(80, 80, 80);
    texturebackground = None;
}

Panel.Panel1 {
    Enabled = false;
    Position = (&.w - w, 20);
    Size = (610, &.h - 20);
    renderer = &12;

    Label.Label {
        AutoSize = true;
        Position = (20, 22);
        ScrollbarPolicy = Never;
        Size = (43.2, 18);
        Text = Action;
        TextSize = 13;
        renderer = &6;
    }

    SpinButton.Block {
        Maximum = 10;
        Minimum = 0;
        Position = (120, 10);
        Size = (20, 42);
        Step = 1;
        Value = 0;
        renderer = &1;
    }

    Label.Label1 {
        AutoSize = true;
        Position = (150, 22);
        ScrollbarPolicy = Never;
        Size = (48.2, 18);
        Text = "Block 0";
        TextSize = 13;
        renderer = &6;
    }

    Label.Label2 {
        AutoSize = true;
        Position = (380, 52);
        ScrollbarPolicy = Never;
        Size = (56.2, 18);
        Text = "Frame 0";
        TextSize = 13;
        renderer = &6;
    }

    EditBox.Action {
        InputValidator = "[0-9]{0,3}";
        Position = (70, 20);
        Size = (40, 22);
        TextSize = 13;
        renderer = &8;
    }

    Slider.Progress {
        ChangeValueOnScroll = true;
        InvertedDirection = false;
        Maximum = 1;
        Minimum = 0;
        Position = (230, 22);
        Size = (350, 16);
        Step = 1;
        Value = 0;

        Renderer {
            texturethumb = "assets/gui/themes/Black.png" Part(243, 150, 30, 30);
            texturethumbhover = None;
            texturetrack = "assets/gui/themes/Black.png" Part(203, 150, 20, 45) Middle(0, 15, 20, 15);
            texturetrackhover = "assets/gui/themes/Black.png" Part(223, 150, 20, 45) Middle(0, 15, 20, 15);
        }
    }

    Label.SpeedLabel {
        AutoSize = true;
        Position = (510, 52);
        ScrollbarPolicy = Never;
        Size = (19.2, 18);
        Text = x0;
        TextSize = 13;
        renderer = &6;
    }

    Button.Play {
        Position = (240, 50);
        Text = Play;
        TextSize = 13;
        renderer = &5;
    }

    Button.Step {
        Position = (300, 50);
        Text = Step;
        TextSize = 13;
        renderer = &5;
    }

    Panel.AnimPanel {
        Position = (0, 90);
        Size = (610, &.h - y);
        renderer = &12;

        Panel.Panel2 {
            Position = (0, 40);
            Size = (&.w, &.h - y);
            renderer = &12;

            Label.Label17 {
                AutoSize = true;
                Position = (20, 370);
                ScrollbarPolicy = Never;
                Size = (101.2, 40);
                Text = "Frame flags";
                TextSize = 13;

                Renderer {
                    bordercolor = #BEBEBE;
                    borders = (1, 1, 1, 1);
                    padding = (10, 10, 10, 10);
                    textcolor = rgb(190, 190, 190);
                    texturebackground = None;

                    scrollbar {
                        texturearrowdown = "assets/gui/themes/Black.png" Part(163, 174, 20, 20) Middle(0, 1, 20, 19);
                        texturearrowdownhover = "assets/gui/themes/Black.png" Part(183, 174, 20, 20) Middle(0, 1, 20, 19);
                        texturearrowup = "assets/gui/themes/Black.png" Part(163, 154, 20, 20) Middle(0, 0, 20, 19);
                        texturearrowuphover = "assets/gui/themes/Black.png" Part(183, 154, 20, 20) Middle(0, 0, 20, 19);
                        texturethumb = "assets/gui/themes/Black.png" Part(143, 154, 20, 20);
                        texturethumbhover = "assets/gui/themes/Black.png" Part(143, 174, 20, 20);
                        texturetrack = "assets/gui/themes/Black.png" Part(123, 154, 20, 20);
                        texturetrackhover = "assets/gui/themes/Black.png" Part(123, 174, 20, 20);
                    }
                }
            }

            Label.Label18 {
                AutoSize = true;
                Position = (130, 382);
                ScrollbarPolicy = Never;
                Size = (38.2, 18);
                Text = Value;
                TextSize = 13;
                renderer = &6;
            }

            EditBox.fFlags {
                InputValidator = UInt;
                Position = (170, 380);
                Size = (130, 22);
                Text = 0;
                TextSize = 13;
                renderer = &8;
            }

            Label.Label19 {
                Position = (310, 300);
                ScrollbarPolicy = Never;
                Size = (4.2, &.h - y);
                TextSize = 13;

                Renderer {
                    backgroundcolor = transparent;
                    bordercolor = #BEBEBE;
                    borders = (1, 0, 0, 0);
                    textcolor = #3C3C3C;
                    texturebackground = None;
                }
            }

            CheckBox.fFlag0 {
                Position = (10, 420);
                Size = (20, 20);
                Text = Standing;
                TextSize = 13;
                renderer = &3;
            }

            CheckBox.fFlag2 {
                Position = (10, 450);
                Size = (20, 20);
                Text = Airborne;
                TextSize = 13;
                renderer = &3;
            }

            CheckBox.fFlag4 {
                Position = (10, 480);
                Size = (20, 20);
                Text = "Guard Available";
                TextSize = 13;
                renderer = &3;
            }

            CheckBox.fFlag6 {
                Position = (10, 510);
                Size = (20, 20);
                Text = "Counter Hit State";
                TextSize = 13;
                renderer = &3;
            }

            CheckBox.fFlag1 {
                Position = (170, 420);
                Size = (20, 20);
                Text = Crouching;
                TextSize = 13;
                renderer = &3;
            }

            CheckBox.fFlag3 {
                Position = (170, 450);
                Size = (20, 20);
                Text = Down;
                TextSize = 13;
                renderer = &3;
            }

            CheckBox.fFlag5 {
                Position = (170, 480);
                Size = (20, 20);
                Text = Cancelable;
                TextSize = 13;
                renderer = &3;
            }

            CheckBox.fFlag7 {
                Position = (170, 510);
                Size = (20, 20);
                Text = "Super Armor";
                TextSize = 13;
                renderer = &3;
            }

            CheckBox.fFlag8 {
                Position = (10, 540);
                Size = (20, 20);
                Text = "Normal Armor";
                TextSize = 13;
                renderer = &3;
            }

            CheckBox.fFlag19 {
                Position = (170, 540);
                Size = (20, 20);
                Text = "Guard Point";
                TextSize = 13;
                renderer = &3;
            }

            CheckBox.fFlag10 {
                Position = (10, 570);
                Size = (20, 20);
                Text = Grazing;
                TextSize = 13;
                renderer = &3;
            }

            CheckBox.fFlag11 {
                Position = (170, 570);
                Size = (20, 20);
                Text = Guarding;
                TextSize = 13;
                renderer = &3;
            }

            CheckBox.fFlag12 {
                Position = (10, 600);
                Size = (20, 20);
                Text = "Grab Invul";
                TextSize = 13;
                renderer = &3;
            }

            CheckBox.fFlag13 {
                Position = (170, 600);
                Size = (20, 20);
                Text = "Melee Invul";
                TextSize = 13;
                renderer = &3;
            }

            CheckBox.fFlag14 {
                Position = (10, 630);
                Size = (20, 20);
                Text = "Bullet Invul";
                TextSize = 13;
                renderer = &3;
            }

            CheckBox.fFlag15 {
                Position = (170, 630);
                Size = (20, 20);
                Text = "Air Attack Invul";
                TextSize = 13;
                renderer = &3;
            }

            Label.Label20 {
                AutoSize = true;
                Position = (320, 310);
                ScrollbarPolicy = Never;
                Size = (101.2, 40);
                Text = "Attack flags";
                TextSize = 13;

                Renderer {
                    backgroundcolor = transparent;
                    bordercolor = #BEBEBE;
                    borders = (1, 1, 1, 1);
                    padding = (10, 10, 10, 10);
                    textcolor = #BEBEBE;
                    texturebackground = None;
                }
            }

            EditBox.aFlags {
                InputValidator = UInt;
                Position = (470, 320);
                Size = (130, 22);
                Text = 0;
                TextSize = 13;
                renderer = &8;
            }

            Label.Label21 {
                AutoSize = true;
                Position = (430, 322);
                ScrollbarPolicy = Never;
                Size = (38.2, 18);
                Text = Value;
                TextSize = 13;
                renderer = &6;
            }

            CheckBox.aFlag0 {
                Position = (330, 360);
                Size = (20, 20);
                Text = "Flag1 Stagger";
                TextSize = 13;
                renderer = &3;
            }

            CheckBox.aFlag1 {
                Position = (470, 360);
                Size = (20, 20);
                Text = "High RB";
                TextSize = 13;
                renderer = &3;
            }

            CheckBox.aFlag3 {
                Position = (470, 390);
                Size = (20, 20);
                Text = "Air Blockable";
                TextSize = 13;
                renderer = &3;
            }

            CheckBox.aFlag5 {
                Position = (470, 420);
                Size = (20, 20);
                Text = "Ignore Armor";
                TextSize = 13;
                renderer = &3;
            }

            CheckBox.aFlag7 {
                Position = (470, 450);
                Size = (20, 20);
                Text = Grab;
                TextSize = 13;
                renderer = &3;
            }

            CheckBox.aFlag11 {
                Position = (470, 480);
                Size = (20, 20);
                Text = "Skill ATK Type";
                TextSize = 13;
                renderer = &3;
            }

            CheckBox.aFlag2 {
                Position = (330, 390);
                Size = (20, 20);
                Text = "Low RB";
                TextSize = 13;
                renderer = &3;
            }

            CheckBox.aFlag4 {
                Position = (330, 420);
                Size = (20, 20);
                Text = Unblockable;
                TextSize = 13;
                renderer = &3;
            }

            CheckBox.aFlag6 {
                Position = (330, 450);
                Size = (20, 20);
                Text = "Hit On WB";
                TextSize = 13;
                renderer = &3;
            }

            CheckBox.aFlag10 {
                Position = (330, 480);
                Size = (20, 20);
                Text = "Induce CH";
                TextSize = 13;
                renderer = &3;
            }

            CheckBox.aFlag12 {
                Position = (330, 510);
                Size = (20, 20);
                Text = "Spell ATK Type";
                TextSize = 13;
                renderer = &3;
            }

            CheckBox.aFlag13 {
                Position = (470, 510);
                Size = (20, 20);
                Text = "Air ATK Type";
                TextSize = 13;
                renderer = &3;
            }

            CheckBox.aFlag16 {
                Position = (330, 570);
                Size = (20, 20);
                Text = "Obj ATK Type";
                TextSize = 13;
                renderer = &3;
            }

            CheckBox.aFlag17 {
                Position = (470, 570);
                Size = (20, 20);
                Text = Unreflectable;
                TextSize = 13;
                renderer = &3;
            }

            CheckBox.aFlag19 {
                Position = (330, 600);
                Size = (20, 20);
                Text = "Guard Crush";
                TextSize = 13;
                renderer = &3;
            }

            CheckBox.aFlag20 {
                Position = (470, 600);
                Size = (20, 20);
                Text = "Friendly Fire";
                TextSize = 13;
                renderer = &3;
            }

            CheckBox.fFlag16 {
                Position = (10, 660);
                Size = (20, 20);
                Text = "High ATK Invul";
                TextSize = 13;
                renderer = &3;
            }

            CheckBox.fFlag17 {
                Position = (170, 660);
                Size = (20, 20);
                Text = "Low ATK Invul";
                TextSize = 13;
                renderer = &3;
            }

            CheckBox.fFlag18 {
                Position = (10, 690);
                Size = (20, 20);
                Text = "Obj ATK Invul";
                TextSize = 13;
                renderer = &3;
            }

            CheckBox.ReflectBullet {
                Position = (170, 690);
                Size = (20, 20);
                Text = "Reflect Bullet";
                TextSize = 13;
                renderer = &3;
            }

            CheckBox.fFlag20 {
                Position = (10, 720);
                Size = (20, 20);
                Text = "Flip Velocity";
                TextSize = 13;
                renderer = &3;
            }

            CheckBox.fFlag21 {
                Position = (170, 720);
                Size = (20, 20);
                Text = "Movement Cancel";
                TextSize = 13;
                renderer = &3;
            }

            CheckBox.fFlag22 {
                Position = (10, 750);
                Size = (20, 20);
                Text = "After Image";
                TextSize = 13;
                renderer = &3;
            }

            CheckBox.fFlag23 {
                Position = (170, 750);
                Size = (20, 20);
                Text = "Loop Animation";
                TextSize = 13;
                renderer = &3;
            }

            CheckBox.fFlag24 {
                Position = (10, 780);
                Size = (20, 20);
                Text = "Attack Object";
                TextSize = 13;
                renderer = &3;
            }

            EditBox.MoveSpeed {
                InputValidator = "\\([+-]?[0-9]*\\.?[0-9]{0,2},[+-]?[0-9]*\\.?[0-9]{0,2}\\)";
                Position = (290, 210);
                Size = (140, 22);
                Text = "(0,0)";
                TextSize = 13;
                renderer = &8;
            }

            CheckBox.aFlag21 {
                Position = (330, 630);
                Size = (20, 20);
                Text = "Flag22 Stagger";
                TextSize = 13;
                renderer = &3;
            }

            CheckBox.aFlag22 {
                Position = (470, 630);
                Size = (20, 20);
                Text = "Is Bullet";
                TextSize = 13;
                renderer = &3;
            }

            CheckBox.aFlag23 {
                Position = (330, 660);
                Size = (20, 20);
                Text = Ungrazable;
                TextSize = 13;
                renderer = &3;
            }

            CheckBox.aFlag24 {
                Position = (470, 660);
                Size = (20, 20);
                Text = "Drain On Graze";
                TextSize = 13;
                renderer = &3;
            }

            Label.Label34 {
                Position = (310, 690);
                ScrollbarPolicy = Never;
                Size = (300, 9.8);
                TextSize = 13;
                renderer = &2;
            }

            Label.Label35 {
                AutoSize = true;
                Position = (320, 700);
                ScrollbarPolicy = Never;
                Size = (82.2, 40);
                Text = Modifiers;
                TextSize = 13;

                Renderer {
                    backgroundcolor = transparent;
                    bordercolor = #BEBEBE;
                    borders = (1, 1, 1, 1);
                    padding = (10, 10, 10, 10);
                    textcolor = #BEBEBE;
                    texturebackground = None;
                }
            }

            EditBox.Modifiers {
                InputValidator = UInt;
                Position = (470, 710);
                Size = (130, 22);
                Text = 0;
                TextSize = 13;

                Renderer {
                    caretcolor = rgb(110, 110, 255);
                    defaulttextcolor = rgb(120, 120, 120);
                    padding = (6, 4, 6, 4);
                    selectedtextbackgroundcolor = rgb( 10, 110, 255);
                    selectedtextcolor = White;
                    textcolor = rgb(190, 190, 190);
                    texture = "assets/gui/themes/Black.png" Part(0, 114, 60, 40) Middle(15, 0, 30, 40);
                    texturedisabled = None;
                    texturefocused = "assets/gui/themes/Black.png" Part(120, 114, 60, 40) Middle(15, 0, 30, 40);
                    texturehover = "assets/gui/themes/Black.png" Part(60, 114, 60, 40) Middle(15, 0, 30, 40);
                }
            }

            Label.Label36 {
                AutoSize = true;
                Position = (430, 712);
                ScrollbarPolicy = Never;
                Size = (38.2, 18);
                Text = Value;
                TextSize = 13;

                Renderer {
                    textcolor = rgb(190, 190, 190);
                    texturebackground = None;

                    scrollbar {
                        texturearrowdown = "assets/gui/themes/Black.png" Part(163, 174, 20, 20) Middle(0, 1, 20, 19);
                        texturearrowdownhover = "assets/gui/themes/Black.png" Part(183, 174, 20, 20) Middle(0, 1, 20, 19);
                        texturearrowup = "assets/gui/themes/Black.png" Part(163, 154, 20, 20) Middle(0, 0, 20, 19);
                        texturearrowuphover = "assets/gui/themes/Black.png" Part(183, 154, 20, 20) Middle(0, 0, 20, 19);
                        texturethumb = "assets/gui/themes/Black.png" Part(143, 154, 20, 20);
                        texturethumbhover = "assets/gui/themes/Black.png" Part(143, 174, 20, 20);
                        texturetrack = "assets/gui/themes/Black.png" Part(123, 154, 20, 20);
                        texturetrackhover = "assets/gui/themes/Black.png" Part(123, 174, 20, 20);
                    }
                }
            }

            Label.Label37 {
                Position = (310, 300);
                ScrollbarPolicy = Never;
                Size = (300, 9.8);
                TextSize = 13;
                renderer = &2;
            }

            CheckBox.Mod0 {
                Position = (320, 750);
                Size = (20, 20);
                Text = "Lift Attack";
                TextSize = 13;
                renderer = &7;
            }

            CheckBox.Mod2 {
                Position = (530, 750);
                Size = (20, 20);
                Text = Border;
                TextSize = 13;
                renderer = &7;
            }

            CheckBox.Mod1 {
                Position = (420, 750);
                Size = (20, 20);
                Text = "Smash ATK";
                TextSize = 13;
                renderer = &7;
            }

            CheckBox.Mod3 {
                Position = (320, 780);
                Size = (20, 20);
                Text = "Chain Art";
                TextSize = 13;
                renderer = &7;
            }

            CheckBox.aFlag14 {
                Position = (330, 540);
                Size = (20, 20);
                Text = "High ATK Type";
                TextSize = 13;
                renderer = &11;
            }

            CheckBox.aFlag15 {
                Position = (470, 540);
                Size = (20, 20);
                Text = "Low ATK Type";
                TextSize = 13;
                renderer = &11;
            }

            CheckBox.Mod4 {
                Position = (420, 780);
                Size = (20, 20);
                Text = Spell;
                TextSize = 13;
                renderer = &4;
            }

            CheckBox.Mod5 {
                Position = (530, 780);
                Size = (20, 20);
                Text = Counter;
                TextSize = 13;
                renderer = &4;
            }
        }

        Label.Label3 {
            AutoSize = true;
            Position = (10, 12);
            ScrollbarPolicy = Never;
            Size = (40.2, 18);
            Text = Sprite;
            TextSize = 13;
            renderer = &6;
        }

        EditBox.Sprite {
            DefaultText = "-----.cv2";
            Position = (90, 10);
            Size = (170, 22);
            TextSize = 13;
            renderer = &8;
        }

        EditBox.Offset {
            InputValidator = "\\(-?[0-9]{1,4},-?[0-9]{1,4}\\)";
            Position = (500, 10);
            Size = (90, 22);
            Text = "(0,0)";
            TextSize = 13;
            renderer = &8;
        }

        Label.Label4 {
            AutoSize = true;
            Position = (450, 12);
            ScrollbarPolicy = Never;
            Size = (43.2, 18);
            Text = Offset;
            TextSize = 13;
            renderer = &6;
        }

        Label.Label5 {
            AutoSize = true;
            Position = (450, 42);
            ScrollbarPolicy = Never;
            Size = (37.2, 18);
            Text = Scale;
            TextSize = 13;
            renderer = &6;
        }

        EditBox.Scale {
            InputValidator = "\\([+-]?[0-9]*\\.?[0-9]{0,2},[+-]?[0-9]*\\.?[0-9]{0,2}\\)";
            Position = (500, 40);
            Size = (90, 22);
            Text = "(1,1)";
            TextSize = 13;
            renderer = &8;
        }

        EditBox.Bounds {
            InputValidator = "\\(-?[0-9]{1,4},-?[0-9]{1,4},[0-9]{1,4},[0-9]{1,4}\\)";
            Position = (90, 40);
            Size = (110, 22);
            Text = "(128,0,64,128)";
            TextSize = 13;
            renderer = &8;
        }

        Label.Label6 {
            AutoSize = true;
            Position = (10, 42);
            ScrollbarPolicy = Never;
            Size = (50.2, 18);
            Text = Bounds;
            TextSize = 13;
            renderer = &6;
        }

        EditBox.Duration {
            InputValidator = UInt;
            Position = (360, 70);
            Size = (100, 22);
            Text = 1;
            TextSize = 13;
            renderer = &8;
        }

        Label.Label8 {
            AutoSize = true;
            Position = (300, 72);
            ScrollbarPolicy = Never;
            Size = (58.2, 18);
            Text = Duration;
            TextSize = 13;
            renderer = &6;
        }

        CheckBox.Collision {
            Position = (570, 70);
            Size = (20, 20);
            TextSize = 13;
            renderer = &3;
        }

        Label.Label91 {
            AutoSize = true;
            Position = (10, 192);
            ScrollbarPolicy = Never;
            Size = (117.2, 18);
            Text = "Enemy Block stun";
            TextSize = 13;
            renderer = &6;
        }

        EditBox.EBlockStun {
            InputValidator = UInt;
            Position = (130, 190);
            Size = (80, 22);
            Text = 0;
            TextSize = 13;
            renderer = &8;
        }

        Label.Level90 {
            AutoSize = true;
            Position = (448, 192);
            ScrollbarPolicy = Never;
            Size = (52.2, 18);
            Text = "Hit stun";
            TextSize = 13;
            renderer = &6;
        }

        EditBox.HitStun {
            InputValidator = UInt;
            Position = (500, 190);
            Size = (90, 22);
            Text = 0;
            TextSize = 13;
            renderer = &8;
        }

        EditBox.Rate {
            InputValidator = "\\d{1,3}.?\\d?%";
            Position = (500, 250);
            Size = (90, 22);
            Text = 0%;
            TextSize = 13;
            renderer = &8;
        }

        Label.Label11 {
            AutoSize = true;
            Position = (450, 252);
            ScrollbarPolicy = Never;
            Size = (50.2, 18);
            Text = Prorate;
            TextSize = 13;
            renderer = &6;
        }

        EditBox.HitSpeed {
            InputValidator = "\\([+-]?[0-9]*\\.?[0-9]{0,2},[+-]?[0-9]*\\.?[0-9]{0,2}\\)";
            Position = (90, 280);
            Size = (110, 22);
            Text = "(0,0)";
            TextSize = 13;
            renderer = &8;
        }

        Label.Label10 {
            AutoSize = true;
            Position = (480, 72);
            ScrollbarPolicy = Never;
            Size = (83.2, 18);
            Text = "Collision box";
            TextSize = 13;
            renderer = &6;
        }

        Label.Label23 {
            AutoSize = true;
            Position = (10, 282);
            ScrollbarPolicy = Never;
            Size = (64.2, 18);
            Text = "Hit Speed";
            TextSize = 13;
            renderer = &6;
        }

        Label.Label27 {
            AutoSize = true;
            Position = (240, 252);
            ScrollbarPolicy = Never;
            Size = (43.2, 18);
            Text = Speed;
            TextSize = 13;
            renderer = &6;
        }

        Label.Label28 {
            AutoSize = true;
            Position = (230, 192);
            ScrollbarPolicy = Never;
            Size = (58.2, 18);
            Text = Damage;
            TextSize = 13;
            renderer = &6;
        }

        EditBox.Damage {
            InputValidator = UInt;
            Position = (290, 190);
            Size = (140, 22);
            Text = 0;
            TextSize = 13;
            renderer = &8;
        }

        EditBox.Limit {
            InputValidator = UInt;
            Position = (290, 220);
            Size = (140, 22);
            Text = 0;
            TextSize = 13;
            renderer = &8;
        }

        Label.qdqzd {
            AutoSize = true;
            Position = (245, 222);
            ScrollbarPolicy = Never;
            Size = (34.2, 18);
            Text = Limit;
            TextSize = 13;
            renderer = &6;
        }

        Label.Label31 {
            AutoSize = true;
            Position = (10, 102);
            ScrollbarPolicy = Never;
            Size = (64.2, 18);
            Text = "Hit Sound";
            TextSize = 13;
            renderer = &6;
        }

        EditBox.HitSFX {
            DefaultText = 0;
            InputValidator = UInt;
            Position = (90, 100);
            Size = (80, 22);
            TextSize = 13;
            renderer = &8;
        }

        Label.Label33 {
            AutoSize = true;
            Position = (330, 312);
            ScrollbarPolicy = Never;
            Size = (88.2, 18);
            Text = "Chip damage";
            TextSize = 13;
            renderer = &6;
        }

        EditBox.ChipDmg {
            InputValidator = UInt;
            Position = (420, 310);
            Size = (70, 22);
            Text = 0;
            TextSize = 13;
            renderer = &8;
        }

        Label.Label7 {
            AutoSize = true;
            Position = (10, 162);
            ScrollbarPolicy = Never;
            Size = (112.2, 18);
            Text = "Player Block stun";
            TextSize = 13;
            renderer = &10;
        }

        EditBox.PBlockStun {
            InputValidator = UInt;
            Position = (130, 160);
            Size = (80, 22);
            Text = 0;
            TextSize = 13;

            Renderer {
                caretcolor = rgb(110, 110, 255);
                defaulttextcolor = rgb(120, 120, 120);
                padding = (6, 4, 6, 4);
                selectedtextbackgroundcolor = rgb( 10, 110, 255);
                selectedtextcolor = White;
                textcolor = rgb(190, 190, 190);
                texture = "assets/gui/themes/Black.png" Part(0, 114, 60, 40) Middle(15, 0, 30, 40);
                texturedisabled = None;
                texturefocused = "assets/gui/themes/Black.png" Part(120, 114, 60, 40) Middle(15, 0, 30, 40);
                texturehover = "assets/gui/themes/Black.png" Part(60, 114, 60, 40) Middle(15, 0, 30, 40);
            }
        }

        EditBox.EHitStun {
            InputValidator = UInt;
            Position = (130, 250);
            Size = (80, 22);
            Text = 0;
            TextSize = 13;
            renderer = &9;
        }

        EditBox.PHitStun {
            InputValidator = UInt;
            Position = (130, 220);
            Size = (80, 22);
            Text = 0;
            TextSize = 13;
            renderer = &9;
        }

        Label.Label9 {
            AutoSize = true;
            Position = (10, 252);
            ScrollbarPolicy = Never;
            Size = (101.2, 18);
            Text = "Enemy Hit stun";
            TextSize = 13;

            Renderer {
                textcolor = rgb(190, 190, 190);
                texturebackground = None;

                scrollbar {
                    texturearrowdown = "assets/gui/themes/Black.png" Part(163, 174, 20, 20) Middle(0, 1, 20, 19);
                    texturearrowdownhover = "assets/gui/themes/Black.png" Part(183, 174, 20, 20) Middle(0, 1, 20, 19);
                    texturearrowup = "assets/gui/themes/Black.png" Part(163, 154, 20, 20) Middle(0, 0, 20, 19);
                    texturearrowuphover = "assets/gui/themes/Black.png" Part(183, 154, 20, 20) Middle(0, 0, 20, 19);
                    texturethumb = "assets/gui/themes/Black.png" Part(143, 154, 20, 20);
                    texturethumbhover = "assets/gui/themes/Black.png" Part(143, 174, 20, 20);
                    texturetrack = "assets/gui/themes/Black.png" Part(123, 154, 20, 20);
                    texturetrackhover = "assets/gui/themes/Black.png" Part(123, 174, 20, 20);
                }
            }
        }

        Label.Label12 {
            AutoSize = true;
            Position = (10, 222);
            ScrollbarPolicy = Never;
            Size = (96.2, 18);
            Text = "Player Hit stun";
            TextSize = 13;
            renderer = &10;
        }
    }

    SpinButton.Speed {
        Maximum = 1;
        Minimum = 0;
        Position = (460, 50);
        Size = (42, 20);
        Step = 0.05;
        Value = 0;
        renderer = &1;
    }

    Button.ActionName {
        Position = (20, 60);
        Size = (200, 22);
        TextSize = 10;
        renderer = &5;
    }
}

Panel.Boxes {
    Size = (panel1.x, &.h);

    Renderer {
        backgroundcolor = transparent;
        texturebackground = None;
    }
}

MenuBar.main_bar {
    MinimumSubMenuWidth = 125;
    Size = (&.size, 20);
    TextSize = 13;

    Renderer {
        distancetoside = 5;
        selectedtextcolor = White;
        textcolor = rgb(190, 190, 190);
        texturebackground = "assets/gui/themes/Black.png" Part(115, 179, 8, 6) Middle(2, 2, 4, 2);
        textureitembackground = "assets/gui/themes/Black.png" Part(115, 181, 8, 4) Middle(2, 0, 4, 2);
        textureselecteditembackground = "assets/gui/themes/Black.png" Part(115, 185, 8, 6) Middle(2, 2, 4, 2);
    }

    Menu {
        Text = File;

        Menu {
            Text = "New framedata (Ctrl + N)";
        }

        Menu {
            Text = "Import...";

            Menu {
                Items = ["from game package", "from file"];
                Text = "framedata...";
            }

            Menu {
                Items = ["from loaded palettes", "from file", "from palette editor format"];
                Text = "palette...";
            }
        }

        Menu {
            Text = "Export...";

            Menu {
                Items = ["to game package", "to file"];
                Text = "framedata...";
            }

            Menu {
                Items = ["to game package", "to file"];
                Text = "palette...";
            }
        }

        Menu {
            Text = Settings;
        }

        Menu {
            Text = "Quit (Ctrl + Q)";
        }
    }

    Menu {
        Items = [Palette, "Frame (Ctrl + F)", "End frame (Ctrl + Shift + F)", "Animation block (Ctrl + B)", "Hurt box (Ctrl + H)", "Hit box (Ctrl + Shift + H)"];
        Text = New;
    }

    Menu {
        Items = ["Frame (Ctrl + Shift + Del)", "Animation block (Shift + Del)", "Action (Ctrl + Del)", "Selected box (Del)"];
        Text = Remove;
    }

    Menu {
        Items = ["Copy boxes from last frame", "Copy boxes from next frame", "Flatten all collision boxes", "Flatten this move collision boxes", "Reload textures", "Evil mode"];
        Text = Misc;
    }

    Menu {
        Items = ["Palette editor", "Blending options", "Hitboxes (H)"];
        Text = View;
    }

    Menu {
        Items = [About];
        Text = Help;
    }
}
